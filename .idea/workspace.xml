<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5730d9dc-c0a7-4de8-8930-f5b6e407c26f" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/public/cube.glb" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/resources/cube.blend" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/Cube.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/Rubik/entity/cube.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/Rubik/entity/move.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/Rubik/helper/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/Rubik/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/Rubik/state/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/Rubik/state/rotate.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/styles/rubik.module.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.eslintrc" beforeDir="false" afterPath="$PROJECT_DIR$/.eslintrc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.github/workflows/ci.yml" beforeDir="false" afterPath="$PROJECT_DIR$/.github/workflows/ci.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.prettierrc" beforeDir="false" afterPath="$PROJECT_DIR$/.prettierrc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/next-env.d.ts" beforeDir="false" afterPath="$PROJECT_DIR$/next-env.d.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/next.config.js" beforeDir="false" afterPath="$PROJECT_DIR$/next.config.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/_app.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/pages/_app.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/_document.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/pages/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/postcss.config.js" beforeDir="false" afterPath="$PROJECT_DIR$/postcss.config.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/public/meta.json" beforeDir="false" afterPath="$PROJECT_DIR$/public/meta.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/button/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/cards/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/container/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/footer/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/header/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/logo/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/main/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/styles/global.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/styles/global.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tailwind.config.js" beforeDir="false" afterPath="$PROJECT_DIR$/tailwind.config.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/yarn.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="EditorConfigPreviewManager">
    <editorConfig file="$PROJECT_DIR$/.editorconfig" previewFile="$PROJECT_DIR$/.eslintrc" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="2C0vrCh1uEbCjVOQf3bkatewchR" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "last_opened_file_path": "/Users/sanmoh/Code/react-rubik",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.standard": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.standard": "",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "prettierjs.PrettierConfiguration.Package": "/Users/sanmoh/Code/react-rubik/node_modules/prettier",
    "settings.editor.selected.configurable": "settings.javascript.linters.eslint",
    "ts.external.directory.path": "/Users/sanmoh/Code/react-rubik/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/public" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/assets/model" />
      <recent name="$PROJECT_DIR$/src/assets" />
      <recent name="$PROJECT_DIR$/src/components" />
    </key>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="5730d9dc-c0a7-4de8-8930-f5b6e407c26f" name="Changes" comment="" />
      <created>1657952513803</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1657952513803</updated>
      <workItem from="1657952515171" duration="11253000" />
      <workItem from="1658070736215" duration="3075000" />
      <workItem from="1658074724171" duration="9957000" />
      <workItem from="1658089552957" duration="2788000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>